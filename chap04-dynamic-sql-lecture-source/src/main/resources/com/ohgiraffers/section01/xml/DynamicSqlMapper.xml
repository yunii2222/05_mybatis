<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohgiraffers.section01.xml.DynamicSqlMapper">
    <select id="selectMenuByPrice" resultType="com.ohgiraffers.common.MenuDTO">
        SELECT
            menu_code,
            menu_name,
            menu_price,
            category_code,
            orderable_status
        FROM
            tbl_menu
        WHERE
            orderable_status = 'Y'
        <!-- if태그 : test 속성의 조건에 해당할 때만 엘리먼트 구문을 쿼리에 포함한다.
         test="" 조건문이라고 생각하면 된다.
         gt: 크다, gte: 크거나 같다, lt : 작다, lte : 작거나 같다 -->
        <if test="price gte 0 and price lte 10000">
            <![CDATA[
                AND menu_price
            ]]>
        </if>
        <if test="price gt 10000 and price lte 20000">
            AND menu_price BETWEEN 10000 AND #{ price }
        </if>
        <if test="price gt 20000 and price lte 30000">
            AND menu_price BETWEEN 20000 AND #{ price }
        </if>
        <if test="price gt 30000">
            AND menu_price BETWEEN 30000 AND #{ price }
        </if>
        ORDER BY
            menu_code
    </select>
    <select id="searchMenu" resultType="com.ohgiraffers.common.MenuDTO">
        SELECT
            menu_code,
            menu_name,
            menu_price,
            category_code,
            orderable_status
        FROM
            tbl_menu
        <if test="condition == 'category'">
            JOIN tbl_category USING (category_code)
        </if>
        WHERE
            orderable_status = 'Y'
        <if test="condition == 'name'">
            AND menu_name LIKE CONCAT ('%', #{ value }, '%')
        </if>
        <if test="condition == 'category'">
            AND category_name =  #{ value }
        </if>
        ORDER BY
            menu_code
    </select>
    <!-- resultType = 자동 Mapping -->
    <select id="searchMenuBySubCategory" resultType="com.ohgiraffers.common.MenuDTO">
        SELECT
            menu_code,
            menu_name,
            menu_price,
            category_code,
            orderable_status
        FROM
            tbl_menu
        WHERE
            orderable_status = 'Y'
        <!-- choose(when,otherwise) : java의 if-else 문 또는 switch-case문과 같은 역할을 한다. -->
        <!-- 동적 쿼리 -->
        <choose>
            <when test="value == '식사'">
                AND category_code IN (4, 5, 6, 7)
            </when>
            <when test="value == '음료'">
                AND category_code IN (8, 9, 10)
            </when>
            <otherwise>
                AND category_code IN (11, 12)
            </otherwise>
        </choose>
        ORDER BY menu_code
    </select>
    <select id="searchMenuByRandomMenuCode" resultType="com.ohgiraffers.common.MenuDTO">
        SELECT
            menu_code,
            menu_name,
            menu_price,
            category_code,
            orderable_status
        FROM
            tbl_menu
        WHERE
            menu_code IN
        <!--
            1. collection: 반복을 수행할 대상(Map에 put할때 넣는 )
            2. item : 반복을 수행할 때마다 꺼내올 값의 이름 설정
            3. open : 반복문 구문의 가장 앞에 올 문자
            4. separator : 반복 될때마다 중간중간item사이에 올 문자
            5. close : 반복문 구문의 가장 마지막에 올 문자 -->
        <foreach collection="randomMenuCodeList" item="menuCode" open="(" separator="," close=")">
            #{ menuCode }
        </foreach>
    </select>
    <select id="searchMenuByNameOrCategory" resultType="com.ohgiraffers.common.MenuDTO" >
        SELECT
            menu_code,
            menu_name,
            menu_price,
            category_code,
            orderable_status
        FROM
            tbl_menu

        <!-- 문제 상황 발생 -->
<!--        <if test="nameValue != null">-->
<!--            WHERE menu_name LIKE CONCAT ('%' #{nameValue}, '%' )-->
<!--        </if>-->
<!--        <if test="categoryValue != null">-->
<!--            AND category_code = #{ categoryValue }-->
<!--        </if>-->
        <!-- 문제 해결 방법 1. where 태그 사용
        (1) 구문이 where로 시작하지 않으면 자동으로 where을 붙여준다.
        (2) 태그 내부에 쿼리문이 추가되지 않으면 where을 무시한다.
        (3) 구문이 AND 나 OR로 시작하면 자동으로 해당 단어를 제거한다. -->
<!--        <where>-->
<!--            <if test="nameValue != null">-->
<!--                menu_name LIKE CONCAT ('%' #{nameValue}, '%' )-->
<!--            </if>-->
<!--            <if test="categoryValue != null">-->
<!--                AND category_code = #{ categoryValue }-->
<!--            </if>-->
<!--        </where>-->
        <!-- 해결방법2. trim 태그 이용
            (1) prefix : 처리 후 엘리먼트의 내용이 있으면 가장 앞에 붙여주는 문자 (접두사)
            (2) prefixOverrides : 처리 후 엘리먼트의 내용 중 가장 앞에 해당하는 문자를 자동 삭제
            (3) suffix : 처리 후 엘리먼트의 내용이 있으면 가장 뒤에 붙여주는 문자 (접리사)
            (4) suffixOverrides : 처리 후 엘리먼트의 내용 중 가장 뒤에 해당하는 문자를 자동 삭제 -->
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="nameValue != null">
                menu_name LIKE CONCAT ('%' #{nameValue}, '%' )
            </if>
            <if test="categoryValue != null">
                AND category_code = #{ categoryValue }
            </if>
        </trim>
    </select>
    <update id="updateMenu">
        UPDATE
            tbl_menu
<!--        SET
        &lt;!&ndash; 문제 상황 발생 &ndash;&gt;
        <if test="menuName != null and menuName != '' ">
            menu_name = #{ menuName },
        </if>
        <if test="categoryCode != null and categoryCode != ''">
            category_code = #{ categoryCode },
        </if>
        <if test="orderableStatus != null and orderableStatus != ''">
            orderable_status = #{orderableStatus}
        </if>-->
        <!-- 해결 방안 1. set태그 사용
        (1) SET 구문 작성
        (2) 앞 또는 뒤에 붙는 , 를 제거-->
<!--        <set>-->
<!--            <if test="menuName != null and menuName != '' ">-->
<!--                menu_name = #{ menuName },-->
<!--            </if>-->
<!--            <if test="categoryCode != null and categoryCode gt 0">-->
<!--                category_code = #{ categoryCode },-->
<!--            </if>-->
<!--            <if test="orderableStatus != null and orderableStatus != ''">-->
<!--                orderable_status = #{orderableStatus}-->
<!--            </if>-->
<!--        </set>-->
        <trim prefix="SET" suffixOverrides=",">
            <if test="menuName != null and menuName != '' ">
                menu_name = #{ menuName },
            </if>
            <if test="categoryCode != null and categoryCode gt 0">
                category_code = #{ categoryCode },
            </if>
            <if test="orderableStatus != null and orderableStatus != ''">
                orderable_status = #{orderableStatus}
            </if>
        </trim>
        WHERE
            menu_code = #{menuCode}
    </update>
</mapper>